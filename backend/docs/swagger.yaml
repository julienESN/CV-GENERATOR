openapi: 3.0.0
info:
  title: CV Generator API
  version: 1.0.0
  description: API documentation for the CV Generator application.
servers:
  - url: https://your-api-domain.com/api
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    AuthResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token

    RegisterRequest:
      type: object
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          description: User's name
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password

    CV:
      type: object
      properties:
        id:
          type: string
          description: CV ID
        userId:
          type: string
          description: User ID who owns the CV
        name:
          type: string
        firstname:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        website:
          type: string
          format: uri
        summary:
          type: string
        description:
          type: string
        skills:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        certifications:
          type: array
          items:
            type: string
        interests:
          type: array
          items:
            type: string
        educationalExperiences:
          type: array
          items:
            type: string
        professionalExperiences:
          type: array
          items:
            type: string
        visibility:
          type: boolean

    CreateCVRequest:
      type: object
      required:
        - name
        - firstname
        - email
        - description
        - educationalExperiences
        - professionalExperiences
      properties:
        name:
          type: string
        firstname:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string
        website:
          type: string
          format: uri
        summary:
          type: string
        description:
          type: string
        skills:
          type: array
          items:
            type: string
        languages:
          type: array
          items:
            type: string
        certifications:
          type: array
          items:
            type: string
        interests:
          type: array
          items:
            type: string
        educationalExperiences:
          type: array
          items:
            type: string
        professionalExperiences:
          type: array
          items:
            type: string
        visibility:
          type: boolean

paths:
  /register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      requestBody:
        description: User registration data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Email or name is already taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error creating user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        description: User login credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error logging in
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cv/create:
    post:
      summary: Create a new CV
      tags:
        - CV
      security:
        - bearerAuth: []
      requestBody:
        description: CV data to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCVRequest'
      responses:
        '201':
          description: CV created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CV'
        '500':
          description: Error creating CV
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cv/user:
    get:
      summary: Get CVs of the authenticated user
      tags:
        - CV
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of user's CVs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CV'
        '500':
          description: Error fetching user CVs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cv/update/{id}:
    put:
      summary: Update a CV
      tags:
        - CV
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the CV to update
          required: true
          schema:
            type: string
      requestBody:
        description: Updated CV data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCVRequest'
      responses:
        '200':
          description: CV updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CV'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: CV not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error updating CV
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cv/delete/{id}:
    delete:
      summary: Delete a CV
      tags:
        - CV
      security:
        - bearerAuth: [ ]
      parameters:
        - name: id
          in: path
          description: ID of the CV to delete
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CV deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CV'
        '403':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: CV not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error deleting CV
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string


  /cv/public:
    get:
      summary: Get public CVs
      tags:
        - CV
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
          description: Search query to filter CVs by name or firstname
      responses:
        '200':
          description: List of public CVs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CV'
        '500':
          description: Error fetching public CVs
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cv/{id}:
    get:
      summary: Get a CV by ID
      tags:
        - CV
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the CV to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CV retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CV'
        '403':
          description: This CV is private
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: CV not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error fetching CV
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

